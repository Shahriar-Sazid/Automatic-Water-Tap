
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000186  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001da  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000020c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000966  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000597  00000000  00000000  00000bce  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000449  00000000  00000000  00001165  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000015b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000032e  00000000  00000000  000015d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004d7  00000000  00000000  00001902  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001dd9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 c1 00 	jmp	0x182	; 0x182 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

int main(void)
{
	int on = -1;
	int period;
	DDRD = 0x0f;		/* Make PORTD lower pins as output */
  6c:	8f e0       	ldi	r24, 0x0F	; 15
  6e:	81 bb       	out	0x11, r24	; 17
	period = 10;
	DDRA = 0x00;
  70:	1a ba       	out	0x1a, r1	; 26
	DDRC = 0xff;
  72:	8f ef       	ldi	r24, 0xFF	; 255
  74:	84 bb       	out	0x14, r24	; 20
#include <util/delay.h>		/* Include delay header file */
#define DELAY 10

int main(void)
{
	int on = -1;
  76:	8f ef       	ldi	r24, 0xFF	; 255
  78:	9f ef       	ldi	r25, 0xFF	; 255
				check = PINA>>2;
				check = check & 0x0001;
				if(check!=0){
					PORTC = 0x00;
					for(int i = 0; i<140; i++){
						PORTD = 0x08;
  7a:	f8 e0       	ldi	r31, 0x08	; 8
						_delay_ms(period);
						PORTD = 0x0c;
  7c:	ec e0       	ldi	r30, 0x0C	; 12
						_delay_ms(period);
						PORTD = 0x04;
  7e:	74 e0       	ldi	r23, 0x04	; 4
						_delay_ms(period);
						PORTD = 0x06;
  80:	66 e0       	ldi	r22, 0x06	; 6
						_delay_ms(period);
						PORTD = 0x02;
  82:	52 e0       	ldi	r21, 0x02	; 2
						_delay_ms(period);
						PORTD = 0x03;
  84:	43 e0       	ldi	r20, 0x03	; 3
						_delay_ms(period);
						PORTD = 0x01;
  86:	21 e0       	ldi	r18, 0x01	; 1
						_delay_ms(period);
						PORTD = 0x09;
  88:	39 e0       	ldi	r19, 0x09	; 9
					}
					on = -1;
  8a:	0f ef       	ldi	r16, 0xFF	; 255
  8c:	ff 24       	eor	r15, r15
  8e:	fa 94       	dec	r15
					PORTD = 0x0c;
					_delay_ms(period);
					PORTD = 0x08;
					_delay_ms(period);
				}
				on = 1;	
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	a0 e0       	ldi	r26, 0x00	; 0

	while (1)
	{
		int check = PINA>>2;
		check = check & 0x0001;
		if(check==0){
  94:	ca 99       	sbic	0x19, 2	; 25
  96:	3c c0       	rjmp	.+120    	; 0x110 <main+0xa4>
			if(on == -1){
  98:	8f 3f       	cpi	r24, 0xFF	; 255
  9a:	1f ef       	ldi	r17, 0xFF	; 255
  9c:	91 07       	cpc	r25, r17
  9e:	d1 f7       	brne	.-12     	; 0x94 <main+0x28>
				PORTC = 0x01;
  a0:	25 bb       	out	0x15, r18	; 21
  a2:	8c e8       	ldi	r24, 0x8C	; 140
  a4:	90 e0       	ldi	r25, 0x00	; 0
				for(int i = 0; i<140; i++){
					PORTD = 0x09;
  a6:	32 bb       	out	0x12, r19	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a8:	c8 e3       	ldi	r28, 0x38	; 56
  aa:	d1 e0       	ldi	r29, 0x01	; 1
  ac:	21 97       	sbiw	r28, 0x01	; 1
  ae:	f1 f7       	brne	.-4      	; 0xac <main+0x40>
  b0:	00 00       	nop
					_delay_ms(period);
					PORTD = 0x01;
  b2:	22 bb       	out	0x12, r18	; 18
  b4:	c8 e3       	ldi	r28, 0x38	; 56
  b6:	d1 e0       	ldi	r29, 0x01	; 1
  b8:	21 97       	sbiw	r28, 0x01	; 1
  ba:	f1 f7       	brne	.-4      	; 0xb8 <main+0x4c>
  bc:	00 00       	nop
					_delay_ms(period);
					PORTD = 0x03;
  be:	42 bb       	out	0x12, r20	; 18
  c0:	c8 e3       	ldi	r28, 0x38	; 56
  c2:	d1 e0       	ldi	r29, 0x01	; 1
  c4:	21 97       	sbiw	r28, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <main+0x58>
  c8:	00 00       	nop
					_delay_ms(period);
					PORTD = 0x02;
  ca:	52 bb       	out	0x12, r21	; 18
  cc:	c8 e3       	ldi	r28, 0x38	; 56
  ce:	d1 e0       	ldi	r29, 0x01	; 1
  d0:	21 97       	sbiw	r28, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <main+0x64>
  d4:	00 00       	nop
					_delay_ms(period);
					PORTD = 0x06;
  d6:	62 bb       	out	0x12, r22	; 18
  d8:	c8 e3       	ldi	r28, 0x38	; 56
  da:	d1 e0       	ldi	r29, 0x01	; 1
  dc:	21 97       	sbiw	r28, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <main+0x70>
  e0:	00 00       	nop
					_delay_ms(period);
					PORTD = 0x04;
  e2:	72 bb       	out	0x12, r23	; 18
  e4:	c8 e3       	ldi	r28, 0x38	; 56
  e6:	d1 e0       	ldi	r29, 0x01	; 1
  e8:	21 97       	sbiw	r28, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <main+0x7c>
  ec:	00 00       	nop
					_delay_ms(period);
					PORTD = 0x0c;
  ee:	e2 bb       	out	0x12, r30	; 18
  f0:	c8 e3       	ldi	r28, 0x38	; 56
  f2:	d1 e0       	ldi	r29, 0x01	; 1
  f4:	21 97       	sbiw	r28, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <main+0x88>
  f8:	00 00       	nop
					_delay_ms(period);
					PORTD = 0x08;
  fa:	f2 bb       	out	0x12, r31	; 18
  fc:	c8 e3       	ldi	r28, 0x38	; 56
  fe:	d1 e0       	ldi	r29, 0x01	; 1
 100:	21 97       	sbiw	r28, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <main+0x94>
 104:	00 00       	nop
 106:	01 97       	sbiw	r24, 0x01	; 1
		int check = PINA>>2;
		check = check & 0x0001;
		if(check==0){
			if(on == -1){
				PORTC = 0x01;
				for(int i = 0; i<140; i++){
 108:	71 f6       	brne	.-100    	; 0xa6 <main+0x3a>
					PORTD = 0x0c;
					_delay_ms(period);
					PORTD = 0x08;
					_delay_ms(period);
				}
				on = 1;	
 10a:	8b 2f       	mov	r24, r27
 10c:	9a 2f       	mov	r25, r26
 10e:	c2 cf       	rjmp	.-124    	; 0x94 <main+0x28>
			}
		}
		else {
			if(on == 1){
 110:	81 30       	cpi	r24, 0x01	; 1
 112:	91 05       	cpc	r25, r1
 114:	09 f0       	breq	.+2      	; 0x118 <main+0xac>
 116:	be cf       	rjmp	.-132    	; 0x94 <main+0x28>
				check = PINA>>2;
				check = check & 0x0001;
				if(check!=0){
 118:	ca 9b       	sbis	0x19, 2	; 25
 11a:	bc cf       	rjmp	.-136    	; 0x94 <main+0x28>
					PORTC = 0x00;
 11c:	15 ba       	out	0x15, r1	; 21
 11e:	8c e8       	ldi	r24, 0x8C	; 140
 120:	90 e0       	ldi	r25, 0x00	; 0
					for(int i = 0; i<140; i++){
						PORTD = 0x08;
 122:	f2 bb       	out	0x12, r31	; 18
 124:	c8 e3       	ldi	r28, 0x38	; 56
 126:	d1 e0       	ldi	r29, 0x01	; 1
 128:	21 97       	sbiw	r28, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <main+0xbc>
 12c:	00 00       	nop
						_delay_ms(period);
						PORTD = 0x0c;
 12e:	e2 bb       	out	0x12, r30	; 18
 130:	c8 e3       	ldi	r28, 0x38	; 56
 132:	d1 e0       	ldi	r29, 0x01	; 1
 134:	21 97       	sbiw	r28, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <main+0xc8>
 138:	00 00       	nop
						_delay_ms(period);
						PORTD = 0x04;
 13a:	72 bb       	out	0x12, r23	; 18
 13c:	c8 e3       	ldi	r28, 0x38	; 56
 13e:	d1 e0       	ldi	r29, 0x01	; 1
 140:	21 97       	sbiw	r28, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <main+0xd4>
 144:	00 00       	nop
						_delay_ms(period);
						PORTD = 0x06;
 146:	62 bb       	out	0x12, r22	; 18
 148:	c8 e3       	ldi	r28, 0x38	; 56
 14a:	d1 e0       	ldi	r29, 0x01	; 1
 14c:	21 97       	sbiw	r28, 0x01	; 1
 14e:	f1 f7       	brne	.-4      	; 0x14c <main+0xe0>
 150:	00 00       	nop
						_delay_ms(period);
						PORTD = 0x02;
 152:	52 bb       	out	0x12, r21	; 18
 154:	c8 e3       	ldi	r28, 0x38	; 56
 156:	d1 e0       	ldi	r29, 0x01	; 1
 158:	21 97       	sbiw	r28, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <main+0xec>
 15c:	00 00       	nop
						_delay_ms(period);
						PORTD = 0x03;
 15e:	42 bb       	out	0x12, r20	; 18
 160:	c8 e3       	ldi	r28, 0x38	; 56
 162:	d1 e0       	ldi	r29, 0x01	; 1
 164:	21 97       	sbiw	r28, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <main+0xf8>
 168:	00 00       	nop
						_delay_ms(period);
						PORTD = 0x01;
 16a:	22 bb       	out	0x12, r18	; 18
 16c:	c8 e3       	ldi	r28, 0x38	; 56
 16e:	d1 e0       	ldi	r29, 0x01	; 1
 170:	21 97       	sbiw	r28, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <main+0x104>
 174:	00 00       	nop
						_delay_ms(period);
						PORTD = 0x09;
 176:	32 bb       	out	0x12, r19	; 18
 178:	01 97       	sbiw	r24, 0x01	; 1
			if(on == 1){
				check = PINA>>2;
				check = check & 0x0001;
				if(check!=0){
					PORTC = 0x00;
					for(int i = 0; i<140; i++){
 17a:	99 f6       	brne	.-90     	; 0x122 <main+0xb6>
						_delay_ms(period);
						PORTD = 0x01;
						_delay_ms(period);
						PORTD = 0x09;
					}
					on = -1;
 17c:	80 2f       	mov	r24, r16
 17e:	9f 2d       	mov	r25, r15
 180:	89 cf       	rjmp	.-238    	; 0x94 <main+0x28>

00000182 <_exit>:
 182:	f8 94       	cli

00000184 <__stop_program>:
 184:	ff cf       	rjmp	.-2      	; 0x184 <__stop_program>
